<?php

/**
 * @file
 * Installation file.
 */

use Drupal\user\Entity\Role;
use Drupal\user\RoleInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_install().
 */
function openy_gc_shared_content_server_install() {
  $roles = Role::loadMultiple([
    RoleInterface::ANONYMOUS_ID,
    RoleInterface::AUTHENTICATED_ID,
  ]);
  $permissions = [
    'restful post shared_source_create',
  ];
  foreach ($permissions as $permission) {
    foreach ($roles as $role) {
      $role->grantPermission($permission);
      $role->save();
    }
  }

  $field_share_count = BaseFieldDefinition::create('integer')
    ->setLabel(t('Count of Downloads'))
    ->setCustomStorage(FALSE)
    ->setSetting('unsigned', TRUE)
    ->setCardinality(1)
    ->setSetting('size', 'big')
    ->setProvider('openy_gc_shared_content_server')
    ->setRequired(FALSE)
    ->setRevisionable(FALSE)
    ->setTranslatable(FALSE)
    ->setDisplayConfigurable('view', FALSE)
    ->setDisplayConfigurable('form', TRUE);

  $definition_manager = \Drupal::entityDefinitionUpdateManager();

  $definition_manager->installFieldStorageDefinition('field_share_count', 'node', 'openy_gc_shared_content_server', $field_share_count);

}

/**
 * Add 'status' field to 'shared_content_source' entity type.
 */
function openy_gc_shared_content_server_update_8001() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $entity_type = $definition_update_manager->getEntityType('shared_content_source');
  $entity_keys = $entity_type->getKeys();
  $entity_keys['published'] = 'status';
  $entity_type->set('entity_keys', $entity_keys);
  $definition_update_manager->updateEntityType($entity_type);

  $status = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Status'))
    ->setDescription(t('Indicating whether the Shared content source Entity is approved.'))
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
      'weight' => 5,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDefaultValue(0);

  $definition_update_manager->installFieldStorageDefinition('status', 'shared_content_source', 'shared_content_source', $status);
}

/**
 * Add `sync_enabled` field to 'shared_content_source' entity type.
 */
function openy_gc_shared_content_server_update_8002() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $status = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Sync Enabled'))
    ->setDescription(t('Indicating whether the Shared content source enabled for sync.'))
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
      'weight' => 5,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDefaultValue(0);

  $definition_update_manager->installFieldStorageDefinition('sync_enabled', 'shared_content_source', 'shared_content_source', $status);
}

/**
 * Add `api_updated` field to 'shared_content_source' entity type.
 */
function openy_gc_shared_content_server_update_8003() {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $status = BaseFieldDefinition::create('boolean')
    ->setLabel(t('API Updated'))
    ->setDescription(t('Indicates whether the Shared content source is using the updated API.'))
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
      'weight' => 5,
    ])
    ->setDisplayConfigurable('form', TRUE)
    ->setDefaultValue(0);

  $definition_update_manager->installFieldStorageDefinition('api_updated', 'shared_content_source', 'shared_content_source', $status);
}

/**
 * Enable big_pipe.
 */
function openy_gc_shared_content_server_update_8004() {
  \Drupal::service('module_installer')->install(['big_pipe'], TRUE);
}
